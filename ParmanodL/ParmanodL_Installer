#!/bin/bash

# Debug toggle

    if [[ $1 == d ]] ; then export debug=1 ; else export debug=0; fi

# Version specific info
    
    export zip_file="2023-05-03-raspios-bullseye-arm64.img.xz"
    export zip_path="$HOME/ParmanodL/$zip_file"
    export image_file="2023-05-03-raspios-bullseye-arm64.img"
    export image_path="$HOME/ParmanodL/$image_file" 
    export hash_zip="e7c0c89db32d457298fbe93195e9d11e3e6b4eb9e0683a7beb1598ea39a0a7aa"
    export hash_image="962780be6bb41522532f26449f67524dc61038673833c079808da9ca2ad9a4f0"

# size 88 wide, and orange colour scheme

    printf '\033[8;38;88t' && echo -e "\033[38;2;255;145;0m" 
    clear ; echo "
########################################################################################

                       P  A  R  M  A  N  O  D  L     O  S 


    You are installing ParmanodL OS onto a microSD card, for use in a Raspberry Pi 4.

    The target microSD can be as small as 16GB.

    The entire process may take about 30 minutes. There will be ocassional promtps,
    so be around the computer as you'll probably be asked for your computer password 
    more than once. You'll also be asked to remove and insert the microSD card to 
    assist with drive detection.

    For best probability of success, do not do resource intensive things with the 
    computer as you build this.

    Hit <enter> to continue

########################################################################################
    " ; read
    
    if [[ $(uname) == Darwin ]] ; then clear ; echo "
########################################################################################


    For Mac OS, there are a few extra things that may need to be installed...


        1)    Docker     -     This will be installed for you if you don't have it
                               but it's a tricky installation to execute in an
                               automated way. If ParmanodL installation fails at the 
                               Docker install, you could try to install it yourself, 
                               then come back to this. The installation will be 
                               detected. Docker is needed because the Pi OS image
                               that ParmanodL is build from is Linux based and needs 
                               to be mounted. Docker can give us a little temporary
                               Linux container to work with. You can uninstall it
                               later if you want.
       
       Hit <enter> to continue

########################################################################################
"
read ; clear ; echo "
########################################################################################


        2)    Homebrew   -     This is a package manager for Mac. It allows installtion
                               of programs using the command line only - pretty cool,
                               and necessary for this to work. If installation is
                               needed, it will be taken care of, but does add possibly
                               5 to 10 minutes extra to the whole process.
        
        3)   Bits and 
             bobs        -     A few little tools here an there may also be added to
                               make the installation go smotther, it won't affect your
                               system in any negative way.
    
       Hit <enter> to continue

########################################################################################
"
read 
fi
echo "
Please wait...
"

# Detect the OS

    if [[ $(uname) == Linux ]] ; then export OS=Linux ; fi
    if [[ $(uname) == Darwin ]] ; then export OS=Mac ; fi

# Detect the Machine

    if [[ $OS == Mac ]] ; then export machine=Mac ; fi
    if [[ $OS == Linux ]] ; then
        if sudo cat /proc/cpuinfo | grep "Raspberry Pi" ; then export machine=Pi ; fi
    fi
    if [[ $machine != Mac && $machine != Pi ]] ; then export macine=other ; fi

# Detect the chip

    export chip=$(uname -m)

#need to get part 1 dependencies

    if [[ $OS = Mac ]] ; then 

        if ! which brew >/dev/null ; then
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)" 
        if ! which brew >/dev/null ; then export warning=1 ; fi
        fi

        if ! which greadlink >/dev/null ; then
            if [[ $warning == 1 ]] ; then echo "problem with homebrew, needed to install coreutils/greadlink. Aborting." ; sleep 4 ; exit ; fi
            brew install coreutils
        fi

        if ! which git >/dev/null ; then
            if [[ $warning == 1 ]] ; then echo "problem with homebrew, needed to install git. Aborting." ; sleep 4 ; exit ; fi
            brew install git
        fi

        if ! which ssh >/dev/null ; then 
            if [[ $warning == 1 ]] ; then echo "problem with homebrew, needed to install git. Aborting." ; sleep 4 ; exit ; fi
            brew instal ssh 
        fi
    
    fi

    if [[ $OS == Linux ]] ; then
        
        sudo apt-get update -y
        if ! which vim ; then sudo apt-get install vim -y ; fi
        if ! which git ; then sudo apt-get install git -y ; fi
        if ! which ssh ; then sudo apt-get install ssh -y ; fi

    fi


# Get Parmanode or update

   if [ ! -e ~/parman_programs/parmanode/src ] ; then
        mkdir -p ~/parman_programs
        cd ~/parman_programs
        git clone --depth 1 https://github.com/armantheparman/parmanode.git || \
          { announce "Unable to get parmanode scripts with git. Aborting." ; exit 1 ; }
    else
        cd $HOME/parman_programs/parmanode/
        git pull >/dev/null
    fi

# Source Parmanode & ParmanodL scripts to get needed functions

    for file in ~/parman_programs/parmanode/src/**/*.sh ; do 
		if [[ $file != *"/postgres_script.sh" ]]; then
	    source $file 
        fi 
	done

    for file in ~/parman_programs/parmanode/ParmanodL/src/*.sh ; do source $file ; done

# Now that parmanode scripts have been sources, the code from here on can be tidier, 
# as parmanode functions are available.

# Part 2 dependencies - Macs need Docker

    Macs_need_docker || exit

# Make necessary directories

    ParmanodL_directories ;  log "parmanodl" "directory function"

# Get PiOS, verify, and extract

    get_PiOS || { log "parmanodl" "failed at get_PiOS" ; exit ; }

# Macs need docker functionality here
    
    ParmanodL_docker_run || { log "parmanodl" "failed at docker_run" ; exit ; }
    ParmanodL_docker_get_binaries || { log "parmanodl" "failed at docker_get_binaries" ; exit ; }
    

# Mount the image and dependent directories

    ParmanodL_mount || { log "parmanodl" "failed at ParmanodL_mount" ; exit ; }

# Setup system locale

    set_locale ; log "parmanodl" "reached set_local"

# Modify the image with chroot

    ParmanodL_chroot ; log "parmanodl" "finished ParmanodL_chroot"

# Debug - opportunity to pause and check

    debug "Chroot finished. Pause to check."

# Unmount the image and system directories

    ParmanodL_unmount ; log "parmanodl" "finished ParmanodL_unmount"

# Get microSD device name into disk variable - user input here

    detect_microSD || { log "parmanodl" "failed at detect_microSD" ; exit ; }

# Write the image to microSD

    ParmanodL_write || { log "parmanodl" "failed at ParmanodL_write" ; exit ; }

# Clean known hosts of parmanodl
 
    clean_known_hosts ; log "parmanodl" "finished clean_known_hosts"

# make run_parmanodl for desktop execution

    make_Run_ParmanodL ; log "parmanodl" "finished make_run_parmanodL"

# Success output

    ParmanodL_success

# Remove temporary script

    rm $HOME/Desktop/ParmanodL_Installer && log "parmanodl" "installer removed"
    
# The End
